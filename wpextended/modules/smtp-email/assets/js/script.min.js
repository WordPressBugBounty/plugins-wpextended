class SmtpEmail{constructor(){this.$testEmailButton=jQuery("#test_email_button"),this.$testEmailButtonText=this.$testEmailButton.find(".wpext-button__text"),this.$testEmail=jQuery("#email_address"),this.i18n=wpextSmtpEmail.i18n,this.restUrl=wpextSmtpEmail.restUrl,this.restNonce=wpextSmtpEmail.restNonce,this.bindEvents()}bindEvents(){this.$testEmailButton.on("click",(t=>this.handleTestEmail(t)))}handleTestEmail(t){t.preventDefault();const i=this.$testEmail.val();this.validateFields(i)&&(this.setFieldsState(!0),this.sendTestEmail(i))}validateFields(t){return t?!!this.isValidEmail(t)||(window.notify.error(this.i18n.invalid_email),!1):(window.notify.error(this.i18n.email_required),!1)}isValidEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}setFieldsState(t){this.$testEmailButton.prop("disabled",t),this.$testEmail.prop("disabled",t)}async sendTestEmail(t){const i=this.$testEmailButtonText.text();this.$testEmail.prop("disabled",!0),this.$testEmailButton.prop("disabled",!0),this.$testEmailButtonText.text(this.i18n.sendingEmail),this.$testEmailButton.attr("data-loading","true");try{const i=await fetch(this.restUrl,{method:"POST",headers:{"Content-Type":"application/json","X-WP-Nonce":this.restNonce},body:JSON.stringify({email:t})}),e=await i.json();e.success?window.notify.success(e.message):window.notify.error(e.message)}catch(t){console.error("SMTP Test Email Error:",t),window.notify.error(t.message||this.i18n.emailSentError)}finally{this.$testEmail.prop("disabled",!1),this.$testEmailButton.prop("disabled",!1),this.$testEmailButtonText.text(i),this.$testEmailButton.attr("data-loading","false")}}}jQuery(document).ready((()=>{new SmtpEmail}));